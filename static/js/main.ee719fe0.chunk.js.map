{"version":3,"sources":["labs/1_Electre.js","App.js","index.js"],"names":["Grades","BAD","PASSABLY","GOOD","PERFECT","KsLabels","defaultKs","defaultAlternatives","Good","getGradeLabel","num","parseFloatOrZero","str","isNaN","parseFloat","labs","label","component","useState","Ks","setKs","alternatives","setAlternatives","sortedAlternatives","setSortedAlternatives","changeAlternative","indx","k_indx","n","map","a","i","aNumber","j","rowSpan","colSpan","length","_","k","type","value","onChange","e","console","log","changeK","target","Object","values","onClick","L","minK","Infinity","maxK","forEach","Math","min","max","b","s","push","positiveSum","negatives","abs","reduce","c","keys","key","parseInt","sort","a1","a2","reverse","computeElectre","nums","mapAlternatives","number","App","currentLab","setCurrentLab","LabComponent","className","lab","style","fontWeight","href","preventDefault","onLinkClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee719fe0.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport \"./Electre.css\";\r\n\r\nconst Grades = {\r\n  BAD: 0.25,\r\n  PASSABLY: 0.5,\r\n  GOOD: 0.75,\r\n  PERFECT: 1,\r\n};\r\n\r\nconst KsLabels = [\r\n  \"оценка программного обеспечения (баллы)\",\r\n  \"срок гарантийного обслуживания (лет)\",\r\n  \"вес образца (чем легче, тем лучше) (усл. ед)\",\r\n  \"объем памяти (чем больше, тем лучше) (усл. ед)\",\r\n];\r\n\r\nconst defaultKs = [0.3, 0.15, 0.25, 0.3];\r\nconst defaultAlternatives = [\r\n  [Grades.Good, 4, 45, 70],\r\n  [Grades.BAD, 3, 30, 110],\r\n  [Grades.GOOD, 5, 50, 80],\r\n  [Grades.PASSABLY, 4.5, 30, 100],\r\n  [Grades.PERFECT, 3.5, 50, 90],\r\n];\r\n\r\nconst getGradeLabel = (num) => {\r\n  switch (num) {\r\n    case Grades.BAD:\r\n      return \"плохо\";\r\n    case Grades.PASSABLY:\r\n      return \"удовлетворительно\";\r\n    case Grades.GOOD:\r\n      return \"хорошо\";\r\n    case Grades.PERFECT:\r\n      return \"отлично\";\r\n  }\r\n};\r\n\r\nconst parseFloatOrZero = (str) =>\r\n  isNaN(parseFloat(str)) ? 0 : parseFloat(str);\r\n\r\nconst mapAlternatives = (alternatives) => {\r\n  return alternatives.map((nums) => {\r\n    return nums.map((num, i) => {\r\n      // Критерий #3: вес образца чем меньше, тем лучше\r\n      if (i === 2) {\r\n        return -num;\r\n      }\r\n\r\n      return num;\r\n    });\r\n  });\r\n};\r\n\r\nconst sumArr = (nums) =>\r\n  nums.reduce((c, num) => {\r\n    return c + num;\r\n  }, 0);\r\n\r\nconst computeElectre = (alternatives, Ks) => {\r\n  const L = Ks.map((_, i) => {\r\n    let minK = Infinity;\r\n    let maxK = -Infinity;\r\n\r\n    alternatives.forEach((a) => {\r\n      minK = Math.min(a[i], minK);\r\n      maxK = Math.max(a[i], maxK);\r\n    });\r\n\r\n    return maxK - minK;\r\n  });\r\n\r\n  const b = [];\r\n  const s = [];\r\n  for (let i = 0; i < alternatives.length; i++) {\r\n    b.push([]);\r\n    s.push([]);\r\n\r\n    for (let j = 0; j < alternatives.length; j++) {\r\n      if (i === j) {\r\n        b[i][j] = null;\r\n        s[i][j] = null;\r\n        continue;\r\n      }\r\n\r\n      let positiveSum = 0;\r\n      const negatives = [];\r\n      for (let k = 0; k < Ks.length; k++) {\r\n        if (alternatives[i][k] >= alternatives[j][k]) {\r\n          positiveSum += Ks[k];\r\n        } else {\r\n          negatives.push(\r\n            Math.abs(alternatives[i][k] - alternatives[j][k]) / L[k]\r\n          );\r\n        }\r\n      }\r\n\r\n      b[i][j] = positiveSum / sumArr(Ks);\r\n\r\n      s[i][j] = negatives.length ? Math.max(...negatives) : 0;\r\n    }\r\n  }\r\n\r\n  const sorted = Object.keys(alternatives)\r\n    .map((key) => parseInt(key))\r\n    .sort((a1, a2) => {\r\n      if (b[a1][a2] > b[a2][a1]) {\r\n        return 1;\r\n      }\r\n\r\n      if (b[a1][a2] < b[a2][a1]) {\r\n        return -1;\r\n      }\r\n\r\n      return 0;\r\n    })\r\n    .sort((a1, a2) => {\r\n      if (s[a1][a2] > s[a2][a1]) {\r\n        return -1;\r\n      }\r\n\r\n      if (s[a1][a2] < s[a2][a1]) {\r\n        return 1;\r\n      }\r\n\r\n      return 0;\r\n    })\r\n    .reverse();\r\n\r\n  return sorted;\r\n};\r\n\r\nconst Electre = () => {\r\n  const [Ks, setKs] = useState(defaultKs);\r\n  const [alternatives, setAlternatives] = useState(defaultAlternatives);\r\n\r\n  const [sortedAlternatives, setSortedAlternatives] = useState(null);\r\n\r\n  const changeAlternative = (indx, k_indx, n) => {\r\n    setAlternatives(\r\n      alternatives.map((a, i) => {\r\n        if (indx === i) {\r\n          return a.map((aNumber, j) => {\r\n            if (j === k_indx) {\r\n              return n;\r\n            }\r\n\r\n            return aNumber;\r\n          });\r\n        }\r\n\r\n        return a;\r\n      })\r\n    );\r\n  };\r\n\r\n  const changeK = (i, n) =>\r\n    setKs(\r\n      Ks.map((k, indx) => {\r\n        console.log(n);\r\n        if (i === indx) {\r\n          return n;\r\n        }\r\n\r\n        return k;\r\n      })\r\n    );\r\n\r\n  return (\r\n    <div>\r\n      <p>\r\n        Задание: Упорядочить (ранжировать) альтернативы по мере убывания их\r\n        приоритетности способом ELECTRE\r\n      </p>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <td rowSpan={2}>Kритерий/ коэффициент важности</td>\r\n            <td colSpan={alternatives.length}>Альтернативы</td>\r\n          </tr>\r\n          <tr>\r\n            {alternatives.map((_, i) => (\r\n              <td key={i}>\r\n                a<sub>{i + 1}</sub>\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Ks.map((k, i) => (\r\n            <tr key={i}>\r\n              <td>\r\n                {KsLabels[i]} K<sub>{i + 1}</sub> /<br />\r\n                <input\r\n                  type=\"number\"\r\n                  value={k}\r\n                  onChange={(e) => changeK(i, parseFloatOrZero(e.target.value))}\r\n                />\r\n              </td>\r\n              {alternatives.map((a, j) => (\r\n                <td key={j}>\r\n                  {i === 0 ? (\r\n                    <select\r\n                      value={a[i]}\r\n                      onChange={(e) =>\r\n                        changeAlternative(\r\n                          j,\r\n                          i,\r\n                          parseFloatOrZero(e.target.value)\r\n                        )\r\n                      }\r\n                    >\r\n                      {Object.values(Grades).map((n) => (\r\n                        <option key={n} value={n}>\r\n                          {getGradeLabel(n)}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  ) : (\r\n                    <input\r\n                      type=\"number\"\r\n                      value={a[i]}\r\n                      onChange={(e) =>\r\n                        changeAlternative(\r\n                          j,\r\n                          i,\r\n                          parseFloatOrZero(e.target.value)\r\n                        )\r\n                      }\r\n                    />\r\n                  )}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <input\r\n        type=\"button\"\r\n        value=\"Ранжировать\"\r\n        onClick={() =>\r\n          setSortedAlternatives(\r\n            computeElectre(mapAlternatives(alternatives), Ks)\r\n          )\r\n        }\r\n      />\r\n      {sortedAlternatives && (\r\n        <div>\r\n          <p>\r\n            Альтернативы, отсортированные в порядке убывания приоритетности:\r\n          </p>\r\n          <ol>\r\n            {sortedAlternatives.map((number) => (\r\n              <li key={number}>\r\n                <b>\r\n                  a<sub>{number + 1}</sub>\r\n                </b>\r\n              </li>\r\n            ))}\r\n          </ol>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Electre;\r\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport Electre from \"./labs/1_Electre\";\n\nconst labs = [\n  { label: \"Метод ранжирования альтернатив ELECTRE\", component: Electre },\n  // {\n  //   label: \"Многокритериальное ранжирование альтернатив\",\n  //   component: () => \"lab2\",\n  // },\n  // {\n  //   label: \"Многокритериальный выбор альтернатив методом анализа иерархий\",\n  //   component: () => \"lab3\",\n  // },\n];\n\nfunction App() {\n  const [currentLab, setCurrentLab] = useState(labs[0]);\n  const LabComponent = currentLab.component;\n\n  const onLinkClick = (e, lab) => {\n    e.preventDefault();\n    setCurrentLab(lab);\n  };\n\n  return (\n    <div className=\"App\">\n      <ul>\n        {labs.map((lab) => (\n          <li key={lab.label}>\n            <a\n              style={{ fontWeight: lab === currentLab ? \"bold\" : \"normal\" }}\n              href=\"#\"\n              onClick={(e) => onLinkClick(e, lab)}\n            >\n              {lab.label}\n            </a>\n          </li>\n        ))}\n      </ul>\n      <LabComponent />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}